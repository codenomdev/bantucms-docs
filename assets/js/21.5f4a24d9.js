(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{295:function(t,e,a){"use strict";a.r(e);var s=a(10),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"store-data-through-repository"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#store-data-through-repository"}},[t._v("#")]),t._v(" Store Data Through Repository")]),t._v(" "),e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#contract"}},[t._v("Contract")]),e("ul",[e("li",[e("a",{attrs:{href:"#create-contract"}},[t._v("Create Contract")])])])]),e("li",[e("a",{attrs:{href:"#repositories"}},[t._v("Repositories")]),e("ul",[e("li",[e("a",{attrs:{href:"#create-repositories"}},[t._v("Create Repositories")])])])]),e("li",[e("a",{attrs:{href:"#binding-interfaces-to-implementations"}},[t._v("Binding Interfaces To Implementations")]),e("ul",[e("li",[e("a",{attrs:{href:"#register-binding"}},[t._v("Register Binding")])])])])])]),e("p"),t._v(" "),e("h2",{attrs:{id:"contract"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#contract"}},[t._v("#")]),t._v(" Contract")]),t._v(" "),e("p",[t._v("Laravel's Contracts are a set of interfaces that define the core services provided by the framework. For example, an "),e("code",[t._v("Illuminate\\Contracts\\Queue\\Queue")]),t._v(" contract defines the methods needed for queueing jobs, while the "),e("code",[t._v("Illuminate\\Contracts\\Mail\\Mailer")]),t._v(" contract defines the methods needed for sending an e-mail.")]),t._v(" "),e("p",[t._v("Each contract has a corresponding implementation provided by the framework. For example, Laravel provides a queue implementation with a variety of drivers, and a mailer implementation that is powered by SwiftMailer.")]),t._v(" "),e("p",[t._v("All of the Laravel contracts live in their own GitHub repository. This provides a quick reference point for all available contracts, as well as a single, decoupled package that may be utilized by package developers.")]),t._v(" "),e("h3",{attrs:{id:"create-contract"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-contract"}},[t._v("#")]),t._v(" Create Contract")]),t._v(" "),e("ul",[e("li",[t._v("You have to understand the "),e("RouterLink",{attrs:{to:"/1.x/modules/#directory-structure"}},[t._v("folder structure in the module")])],1)]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("If you do not find the "),e("code",[t._v("Contracts")]),t._v(" folder in the root of your module, you can create a "),e("code",[t._v("Contracts")]),t._v(" folder first")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("Contracts")]),t._v(" folder structure in your module:")]),t._v(" "),e("div",{staticClass:"language-directory-structure extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("- modules/\n    - ACME/HelloWorld/\n        ...\n        - Contracts/\n        ...\n")])])]),e("ul",[e("li",[t._v("Now, create an interface file named as "),e("code",[t._v("HelloWorld.php")])])]),t._v(" "),e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{pre:!0,attrs:{class:"token php language-php"}},[e("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token package"}},[t._v("ACME"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("HelloWorld"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Contracts")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name-definition class-name"}},[t._v("HelloWorld")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("The contract file allows you to modify file names like: "),e("code",[t._v("HelloWorld.php")]),t._v(", "),e("code",[t._v("HelloWorldInterface.php")]),t._v(", and "),e("code",[t._v("HelloWorldContract.php")])])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[e("strong",[t._v("DO NOT")]),t._v(" use the file names "),e("code",[t._v("HelloWorldModel.php")]),t._v(", and "),e("code",[t._v("HelloWorldRepository.php")]),t._v(". The file name will be the same as the Model and Repository name. See the topic "),e("RouterLink",{attrs:{to:"/1.x/coding-standards/php.html"}},[t._v("Naming Conventions for details")]),t._v(".")],1)]),t._v(" "),e("h2",{attrs:{id:"repositories"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#repositories"}},[t._v("#")]),t._v(" Repositories")]),t._v(" "),e("p",[t._v("Generally, we wrote all of our application logic in the controller. Thereâ€™s an alternative approach of development that abstracts some calls into PHP classes called Repositories. The idea is that we can decouple models from controllers and assign a readable name's to complicated queries.")]),t._v(" "),e("p",[t._v("This file defines our Repository class. Instances of this class have a model property that we tie to an Eloquent model. Once this is bound in the constructor we can call Eloquent methods like findOrFail, update or all from the class methods.")]),t._v(" "),e("h3",{attrs:{id:"create-repositories"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-repositories"}},[t._v("#")]),t._v(" Create Repositories")]),t._v(" "),e("ul",[e("li",[t._v("You have to understand the "),e("RouterLink",{attrs:{to:"/1.x/modules/#directory-structure"}},[t._v("folder structure in the module")])],1)]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("If you do not find the "),e("code",[t._v("Repository")]),t._v(" folder in the root of your module, you can create a "),e("code",[t._v("Repository")]),t._v(" folder first")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("Repository")]),t._v(" folder structure in your module:")]),t._v(" "),e("div",{staticClass:"language-directory-structure extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("- modules/\n    - ACME/HelloWorld/\n        ...\n        - Repository/\n        ...\n")])])]),e("ul",[e("li",[t._v("Now, create a file "),e("code",[t._v("HelloWorldRepository.php")]),t._v(" and create the "),e("code",[t._v("model()")]),t._v(" method in repository class which returns the path of your contract class:")])]),t._v(" "),e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{pre:!0,attrs:{class:"token php language-php"}},[e("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token package"}},[t._v("ACME"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("HelloWorld"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Repositories")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token package"}},[t._v("Bantucms"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Framework"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("App"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Eloquent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("AbstractRepository")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name-definition class-name"}},[t._v("HelloWorldRepository")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AbstractRepository")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n    * Specify Model class name\n    *\n    * @return mixed\n    */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("model")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'ACME/HelloWorld/Contracts/HelloWorld'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[e("strong",[t._v("DO NOT")]),t._v(" use the file names "),e("code",[t._v("HelloWorldModel.php")]),t._v(", and "),e("code",[t._v("HelloWorldContract.php")]),t._v(". The file name will be the same as the Model and Contract name. See the topic "),e("RouterLink",{attrs:{to:"/1.x/coding-standards/php.html"}},[t._v("Naming Conventions for details")]),t._v(".")],1)]),t._v(" "),e("h2",{attrs:{id:"binding-interfaces-to-implementations"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#binding-interfaces-to-implementations"}},[t._v("#")]),t._v(" Binding Interfaces To Implementations")]),t._v(" "),e("p",[t._v("A very powerful feature of the service container is its ability to bind an interface to a given implementation. "),e("a",{attrs:{href:"https://laravel.com/docs/8.x/container#binding-interfaces-to-implementations",target:"_blank",rel:"noopener noreferrer"}},[t._v("More information about bindings, see the official information"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("h3",{attrs:{id:"register-binding"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#register-binding"}},[t._v("#")]),t._v(" Register Binding")]),t._v(" "),e("p",[t._v("After creating all the files stated above, we have to modified a provider as "),e("code",[t._v("HelloWorldServiceProvider.php")]),t._v(". In this file, models which are used in this package are registered. You may check below code:")]),t._v(" "),e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{pre:!0,attrs:{class:"token php language-php"}},[e("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token package"}},[t._v("ACME"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("HelloWorld"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Providers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token package"}},[t._v("Illuminate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Support"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ServiceProvider")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token package"}},[t._v("ACME"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("HelloWorld"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Contracts"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("HelloWorld")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" HelloWorldContract"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token package"}},[t._v("ACME"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("HelloWorld"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Models"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("HelloWorldModel")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* HelloWorldServiceProvider\n*\n* @copyright 2020 Codenom Dev. (http://www.codenom.com)\n*/")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name-definition class-name"}},[t._v("HelloWorldServiceProvider")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServiceProvider")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * @var string $moduleName\n     */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$moduleName")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'ACME_HelloWorld'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * @var string $moduleNameLower\n     */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$moduleNameLower")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'acme_helloworld'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n    * Register services.\n    *\n    * @return void\n    */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function-definition function"}},[t._v("register")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$this")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("HelloWorldContract")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("clas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("HelloWorldModel")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])}),[],!1,null,null,null);e.default=n.exports}}]);